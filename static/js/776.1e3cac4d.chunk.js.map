{"version":3,"file":"static/js/776.1e3cac4d.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/Container/Container.styled.jsx","redux/contacts/selectors.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/Loader.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { Div } from './Container.styled';\nimport PropTypes from 'prop-types';\nconst Container = ({ children }) => <Div> {children}</Div>;\n\nContainer.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const Div = styled.div`\n  @media screen and (min-width: 0px) {\n    max-width: 444px;\n  }\n\n  margin: 0 auto;\n  padding-right: 16px;\n  padding-left: 16px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nexport const SecondTitle = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.value;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n\n  return contacts?.filter(contact =>\n    contact?.name?.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","import { Formik, Field } from 'formik';\nimport toast, { Toaster } from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport 'yup-phone-lite';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { TextField, Button } from '@mui/material';\n\nconst ContactSchema = Yup.object({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Name is required!'),\n  number: Yup.string().phone('UA').required('Phone number is required!'),\n});\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <>\n      <Toaster />\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={ContactSchema}\n        onSubmit={({ ...values }, actions) => {\n          const existingContact = contacts.find(\n            contact => contact.name.toLowerCase() === values.name.toLowerCase()\n          );\n          if (existingContact) {\n            toast.error(\n              `You already have ${existingContact.name} in your contacts`\n            );\n            actions.resetForm();\n          } else {\n            dispatch(addContact({ ...values }));\n            actions.resetForm();\n          }\n        }}\n      >\n        {({ handleSubmit }) => (\n          <form onSubmit={handleSubmit}>\n            <Field name=\"name\">\n              {({ field, form: { touched, errors } }) => (\n                <TextField\n                  {...field}\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  error={touched.name && Boolean(errors.name)}\n                  helperText={touched.name && errors.name}\n                  fullWidth\n                  margin=\"normal\"\n                  autoComplete=\"off\"\n                  size=\"small\"\n                />\n              )}\n            </Field>\n\n            <Field name=\"number\">\n              {({ field, form: { touched, errors } }) => (\n                <TextField\n                  {...field}\n                  label=\"Number\"\n                  variant=\"outlined\"\n                  error={touched.number && Boolean(errors.number)}\n                  helperText={touched.number && errors.number}\n                  fullWidth\n                  margin=\"normal\"\n                  autoComplete=\"off\"\n                  size=\"small\"\n                  sx={{ mb: 2 }}\n                />\n              )}\n            </Field>\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              sx={{ mb: 4 }}\n              fullWidth\n            >\n              Add contact\n            </Button>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n  display: flex;\n\n  align-items: center;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n  border-radius: 5px;\n  padding: 10px;\n\n  &:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n\n  &:hover {\n    background-color: gainsboro;\n  }\n`;\n","import { FaTrashAlt } from 'react-icons/fa';\nimport { ContactItem } from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <ul>\n      {contacts?.map(({ name, number, id }) => {\n        return (\n          <ContactItem key={id}>\n            <span\n              style={{\n                flexGrow: '2',\n              }}\n            >\n              {name}\n            </span>\n            <span\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              {number}\n            </span>\n\n            <FaTrashAlt\n              aria-label=\"delete-icon\"\n              style={{\n                cursor: 'pointer',\n                color: 'crimson',\n              }}\n              onClick={() => {\n                handleDelete(id);\n              }}\n            />\n          </ContactItem>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { updateFilter } from 'redux/contacts/filterSlice';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <TextField\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        onChange={e => dispatch(updateFilter(e.target.value))}\n        id=\"Find contacts by name\"\n        value={value}\n        size=\"small\"\n        sx={{ mb: 4 }}\n        InputLabelProps={{ shrink: true }}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Oval\n      height={20}\n      width={20}\n      color=\"black\"\n      visible={true}\n      ariaLabel=\"oval-loading\"\n      secondaryColor=\"black\"\n      strokeWidth={4}\n      strokeWidthSecondary={4}\n    />\n  );\n};\n\nexport default Loader;\n","import Container from 'components/Container/Container';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader';\nimport { MainTitle, SecondTitle } from 'components/Container/Container.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nexport const ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <MainTitle>Phonebook</MainTitle>\n      <ContactForm />\n      <SecondTitle>Contacts</SecondTitle>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactsList />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["_ref","children","_jsxs","Div","styled","div","_templateObject","_taggedTemplateLiteral","MainTitle","h1","_templateObject2","SecondTitle","h2","_templateObject3","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","value","selectVisibleContacts","contact","_contact$name","name","toLowerCase","includes","ContactSchema","Yup","min","max","required","number","phone","dispatch","useDispatch","useSelector","_Fragment","_jsx","Toaster","Formik","initialValues","validationSchema","onSubmit","actions","values","Object","assign","_objectDestructuringEmpty","existingContact","find","toast","concat","resetForm","addContact","_objectSpread","_ref2","handleSubmit","Field","_ref3","field","_ref3$form","form","touched","errors","TextField","label","variant","Boolean","helperText","fullWidth","margin","autoComplete","size","_ref4","_ref4$form","sx","mb","Button","type","color","ContactItem","li","map","id","style","flexGrow","marginRight","FaTrashAlt","cursor","onClick","deleteContact","handleDelete","onChange","e","updateFilter","target","InputLabelProps","shrink","Oval","height","width","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","ContactsPage","useEffect","fetchContacts","Container","ContactForm","Filter","Loader","ContactsList"],"sourceRoot":""}